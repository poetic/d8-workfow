<?php

/**
 * @file
 * Install and uninstall hooks for the Scheduler API Test module.
 */

/**
 * Implements hook_install().
 */
function scheduler_api_test_install() {
}

/**
 * Implements hook_uninstall().
 *
 * Although not strictly necessary for testing, it is good practice to tidy up
 * module config and content on uninstalling. Plus, when developing this module
 * and enabling it manually as a real module, this code is needed to clean up,
 * otherwise a re-install fails.
 */
function scheduler_api_test_uninstall() {

  // Delete any content that may have been created for the custom node type.
  $nids_query = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('n.type', ['scheduler_api_test'], 'IN')
    ->execute();
  $nids = $nids_query->fetchCol();
  entity_delete_multiple('node', $nids);

  // Delete the custom node type and other config items.
  \Drupal::configFactory()->getEditable('node.type.scheduler_api_test')->delete();
  \Drupal::configFactory()->getEditable('field.storage.node.field_approved_publishing')->delete();
  \Drupal::configFactory()->getEditable('field.storage.node.field_approved_unpublishing')->delete();
  \Drupal::configFactory()->getEditable('field.field.node.scheduler_api_test.field_approved_publishing')->delete();
  \Drupal::configFactory()->getEditable('field.field.node.scheduler_api_test.field_approved_unpublishing')->delete();
  \Drupal::configFactory()->getEditable('core.entity_form_display.node.scheduler_api_test.default')->delete();
  \Drupal::configFactory()->getEditable('core.entity_view_display.node.scheduler_api_test.default')->delete();
  // @todo Is there a better way to delete the config items on uninstall?
  // Assumed this was automatic but it seems not. After manual uninstall the
  // node type is still available, and re-install fails.
  // Cannot re-install until these are removed.
}
