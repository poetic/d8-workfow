<?php

/**
 * @file
 * Contains custom_config.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\Yaml\Yaml;
use Drupal\block_content\Entity\BlockContent;
use Drupal\block_content\Entity\BlockContentType;
use Drupal\node\Entity\Node;
use Drupal\node\Entity\NodeType;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\page_manager\Entity\Page;
use Drupal\page_manager\Entity\PageVariant;
use Drupal\file\Entity\File;
use Drupal\Core\StringTranslation\TranslatableMarkup;
/**
 * Implements hook_help().
 */
function custom_config_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the custom_config module.
    case 'help.page.custom_config':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('custom configuration') . '</p>';
      return $output;

    default:
  }
}

// function custom_config_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
// 	$form['comment_body']['widget']['0']['value']['#attributes']['class'][] = "form-multi-line-text-heigh w-input";
// }


function custom_config_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if($form['#id'] == "node-recipe-form") {
    // dump($form);
    $form['title']['widget']['0']['value']['#attributes']['placeholder'] = "Recipe name";
    $form['title']['widget']['0']['value']['#attributes']['class'][] = 'form-field-66-pc w-input';
    $form['title']['widget']['0']['value']['#title_display'] = "none";

    $form['recipe_description']['widget']['0']['#title_display'] = "none";
    $form['recipe_description']['widget']['0']['value']['#attributes']['placeholder'][] = "What is the sotry? Did you invent this recipe or has it been handed down through generations?";
    $form['recipe_description']['widget']['0']['value']['#attributes']['class'][] = "js-text-full text-full form-multi-line-text-heigh w-input form-textarea required";
    
    $form['recipe_recipe_image']['widget']['0']['value']['#title_display'] = "none";
    // $form['recipe_recipe_image']['widget']['0']['upload_button']['#attributes']['class'][] = "btn btn-sm form-btn-position w-button";
    
    // bye bye title display
    $form['field_prep_hour']['widget']['0']['value']['#title_display'] = "none";
    $form['field_prep_minute']['widget']['0']['value']['#title_display'] = "none";
    $form['field_cook_hour']['widget']['0']['value']['#title_display'] = "none";
    $form['field_cook_minute']['widget']['0']['value']['#title_display'] = "none";
    $form['field_rest_hour']['widget']['0']['value']['#title_display'] = "none";
    $form['field_rest_minute']['widget']['0']['value']['#title_display'] = "none";
    $form['field_freeze_hour']['widget']['0']['value']['#title_display'] = "none";
    $form['field_freeze_minute']['widget']['0']['value']['#title_display'] = "none";
    $form['field_decorate_hour']['widget']['0']['value']['#title_display'] = "none";
    $form['field_decorate_minute']['widget']['0']['value']['#title_display'] = "none";

    // input box style
    $form['field_prep_hour']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_prep_minute']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_cook_hour']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_cook_minute']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_rest_hour']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_rest_minute']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_freeze_hour']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_freeze_minute']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_decorate_hour']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";
    $form['field_decorate_minute']['widget']['0']['value']['#attributes']['class'][] = "form-time-entry w-input";

    // make input boxes inline?
    $form['field_prep_hour']['#attributes']['style'][] = "display: inline-block";
    $form['field_prep_minute']['#attributes']['style'][] = "display: inline-block";
    $form['field_cook_hour']['#attributes']['style'][] = "display: inline-block";
    $form['field_cook_minute']['#attributes']['style'][] = "display: inline-block";
    $form['field_rest_hour']['#attributes']['style'][] = "display: inline-block";
    $form['field_rest_minute']['#attributes']['style'][] = "display: inline-block";
    $form['field_freeze_hour']['#attributes']['style'][] = "display: inline-block";
    $form['field_freeze_minute']['#attributes']['style'][] = "display: inline-block";
    $form['field_decorate_hour']['#attributes']['style'][] = "display: inline-block";
    $form['field_decorate_minute']['#attributes']['style'][] = "display: inline-block";

    $form['recipe_yield']['widget']['0']['value']['#title_display'] = "none";
    $form['recipe_yield']['widget']['0']['value']['#attributes']['placeholder'][] ="Eg. 24 cookies";
    $form['recipe_yield']['widget']['0']['value']['#attributes']['class'][] = "form-field-66-pc w-input";

    $form['field_recipe_ingredients']['widget']['0']['value']['#title_display'] = "none";

    $form['recipe_directions']['widget']['0']['#title_display'] = "none";
    $form['recipe_directions']['widget']['0']['#attributes']['class'][] = "form-multi-line-text-heigh w-input"; 
    $form['recipe_directions']['widget']['0']['#attributes']['placeholder'][] = "Add your step-by-step instructions";
    $form['recipe_directions']['widget']['0']['#discription'] = 'Pretend we are in your kitchen and you want to walk us through, step by step, how to make your dish. Keep in mind we’ve never made this exact recipe before, so be descriptive and provide lots of details. For example “Remove chicken from oven and drain off excess liquid. Pour on half of prepared sauce and cook in oven for 45-60 minutes at reduced temperature of 350°F."';

    $form['actions']['submit']['#attributes']['class'][] = "btn btn-form btn-submit w-button";
    // $form['field_tips']['widget']['0']['value']['#attributes']['placeholder'][] = "Eg. Don’t forget to let the cake sit for 30 mins before your guests arrive";

    // $form['field_comment_']['widget']['0']['value']['#attributes']['class'][] = "form-multi-line-text-heigh w-input";
  }
  if($form['#id'] == "comment-form") {
    unset($form['actions']['preview']);
    $form['actions']['submit']['#value'] = new TranslatableMarkup('Post Review');
    $form['actions']['submit']['#attributes']['class'][] = "btn btn-submit-form w-button";
    $form['comment_body']['widget']['0']['#attributes']['class'][] = "form-multi-line-text-height w-input";
    $form['comment_body']['widget']['0']['#attributes']['placeholder'][] = "What did you think of this recipe? Would you make it again? Your review and tips help others get the best out of their baking.";
    // $form['field_comment_rating']['#attributes']['required'][] = "required";
    $form['field_comment_rating']['widget']['0']['#attributes']['required'][] = "required";

    //['rating']['#widget']['#attributes']['placeholder'][] = "What did you think of this recipe? Would you make it again? Your review and tips help others get the best out of their baking.";required="required"
    $form['comment_body']['widget']['0']['#title_display'] = "none";
    // dump($form);
    // $user = user_load($variables['user']->id());
    // $variables['user_img'] = $user->field_acct_img->getValue();
  }

  
}



function custom_config_comment_create($entity) {
  $comment_rating = $entity->get('field_comment_rating')->getValue()[0]['rating'];
  // dump($entity);
  // dump($comment_rating);
  //node field rating
  $node = Node::load($entity->get('entity_id')->target_id);
  $field_rating = $node->get('field_rating_average')->value;
  $comment_count = $node->get('field_recipe_comments')->getValue()[0]['comment_count'];
  $node->set('field_rating_average', round( ( ($field_rating * $comment_count) + $comment_rating) / ($comment_count + 1),-1 ) );
  
  $node->save();
  $field_rating = $node->get('field_rating_average')->value;
  // dpm($field_rating);
}

function custom_config_comment_update($entity) {
  $comment_rating = $entity->get('field_comment_rating')->getValue()[0]['rating'];
  // dump($entity);
  // dump($comment_rating);
  //node field rating
  $node = Node::load($entity->get('entity_id')->target_id);
  $field_rating = $node->get('field_rating_average')->value;
  $comment_count = $node->get('field_recipe_comments')->getValue()[0]['comment_count'];
  $node->set('field_rating_average', round( ( ($field_rating * $comment_count) + $comment_rating) / ($comment_count + 1),-1 ) );
  
  $node->save();
  $field_rating = $node->get('field_rating_average')->value;
  // dpm($field_rating);
}

function custom_config_comment_delete($entity) {
  $comment_rating = $entity->get('field_comment_rating')->getValue()[0]['rating'];
  // dump($entity);
  // node field rating
  $node = Node::load($entity->get('entity_id')->target_id);
  $field_rating = $node->get('field_rating_average')->value;
  $comment_count = $node->get('field_recipe_comments')->getValue()[0]['comment_count'];
  $node->set('field_rating_average', round( ( ($field_rating * $comment_count) - $comment_rating) / ($comment_count - 1),-1 ) );
  
  $node->save();
  // dpm($field_rating);
}